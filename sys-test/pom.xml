<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>de.cpoepke.mule.demo</groupId>
  <artifactId>sys-test</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>System Test - Mule End to End Test Demo</name>
  <description>System Test of the Mule End to End Test Demo</description>

  <properties>
    <webservice.port>8080</webservice.port>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>

  <dependencies>
    <!-- Dependency with its version which is referenced from the
       src/main/assembly-app.xml descriptor. This is the mule app files which gets
       stored in the  docker container which then tested -->
    <dependency>
      <groupId>de.cpoepke.mule.demo</groupId>
      <artifactId>mule-app</artifactId>
      <version>1.0.0-SNAPSHOT</version>
      <type>zip</type>
      <exclusions>
        <exclusion>
          <groupId>org.mule.modules</groupId>
          <artifactId>mule-module-apikit</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- ======================================================================================  -->
    <!-- Used for the integration tests -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.jayway.restassured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>2.4.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.jolokia</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.11.5</version>

        <configuration>
          <dockerHost>${boot2docker.url}</dockerHost>

          <images>
            <!-- Mule app container configuration -->
            <image>
              <name>mule-app</name>
              <alias>mule-app</alias>
              <run>
                <ports>
                  <port>${webservice.port}:${webservice.port}</port>
                </ports>
                <links>
                  <link>rest-mock:backend</link>
                </links>
                <wait>
                  <!-- The plugin waits until this URL is reachable via HTTP ... -->
                  <log>Server startup</log>
                  <url>${boot2docker.address}:${webservice.port}/api/console</url>
                  <time>2000</time>
                  <shutdown>500</shutdown>
                </wait>
                <log>
                  <prefix>Mule</prefix>
                  <date>ISO8601</date>
                  <color>blue</color>
                </log>
              </run>
              <build>
                <from>cpoepke/muledocker:latest</from>
                <tags>
                  <tag>mule-app</tag>
                </tags>
                <command>/opt/mule-standalone-3.6.1/bin/mule -M-Dbackend.host=$BACKEND_PORT_9000_TCP_ADDR -M-Dbackend.port=$BACKEND_PORT_9000_TCP_PORT</command>
                <assembly>
                  <mode>dir</mode>
                  <basedir>/</basedir>
                  <descriptor>assembly-app.xml</descriptor>
                </assembly>
              </build>
            </image>
            <!-- Backend mock container configuration -->
            <image>
              <name>rest-mock</name>
              <alias>rest-mock</alias>
              <run>
                <ports>
                  <port>2525:2525</port>
                  <port>9000:9000</port>
                </ports>
                <log>
                  <prefix>Mock</prefix>
                  <date>ISO8601</date>
                  <color>yellow</color>
                </log>
                <wait>
                  <!-- The plugin waits until this URL is reachable via HTTP ... -->
                  <log>Server startup</log>
                  <url>${boot2docker.address}:2525</url>
                  <time>2000</time>
                  <shutdown>500</shutdown>
                </wait>
              </run>
              <build>
                <from>cpoepke/mountebank-basis:latest</from>
                <tags>
                  <tag>rest-mock</tag>
                </tags>
                <command>mb --configfile /mb/imposters.ejs --allowInjection</command>
                <assembly>
                  <mode>dir</mode>
                  <basedir>/</basedir>
                  <descriptor>assembly-mock.xml</descriptor>
                </assembly>
              </build>
            </image>
          </images>
        </configuration>

        <!-- Connect start/stop to pre- and
             post-integration-test phase, respectively if you want to start
             your docker containers during integration tests -->
        <executions>
          <execution>
            <id>start</id>
            <phase>pre-integration-test</phase>
            <goals>
              <!-- "build" should be used to create the images with the
                   artefacts -->
              <goal>build</goal>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- fails-safe-plugin should be used instead of surefire so that the container gets stopped even
           when the tests fail -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.18.1</version>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
          <execution>
            <id>verify</id>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <systemPropertyVariables>
            <!-- Needs to be repeated here (the following two lines strangely doesn't work when the next line is omitted although)
                 Maven, you little sneaky beast ... -->
            <!--<system.port>${webservice.port}</system.port>-->

            <!-- Map maven variables to system properties which in turn can be used in the test classes -->
            <system.url>${boot2docker.address}:${webservice.port}</system.url>
          </systemPropertyVariables>
        </configuration>
      </plugin>

      <!-- Tell surefire to skip test, we are using the failsafe plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.18.1</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>